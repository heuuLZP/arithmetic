(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{357:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符匹配对应的练习题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符匹配对应的练习题"}},[t._v("#")]),t._v(" 字符匹配对应的练习题")]),t._v(" "),a("p",[t._v("正则类的问题可以拆解成固定的套路："),a("code",[t._v("纵向模糊匹配")]),t._v(" + "),a("code",[t._v("横向模糊匹配")]),t._v("。")]),t._v(" "),a("p",[t._v("对应到具体知识点就是："),a("code",[t._v("元字符")]),t._v("、"),a("code",[t._v("字符组")]),t._v("、"),a("code",[t._v("量词")]),t._v("、"),a("code",[t._v("分支结构")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"一、16-进制颜色值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、16-进制颜色值"}},[t._v("#")]),t._v(" 一、16 进制颜色值")]),t._v(" "),a("p",[t._v("给定字符串(以下字符串中不一定都是正确的十六进制)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#ffbbad #f1234 #Fc01DF #FFF #ffE\n")])])]),a("p",[t._v("要求匹配正确的十六进制颜色值。")]),t._v(" "),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("1.起始字符是"),a("code",[t._v("#")]),a("br"),t._v("\n2.十六进制的字符范围是 "),a("code",[t._v("0-9")]),t._v(", "),a("code",[t._v("a-f")]),t._v(", "),a("code",[t._v("A-F")]),a("br"),t._v("\n根据纵向模糊匹配，可以使用字符组： "),a("code",[t._v("[0-9a-fA-F]")]),t._v("\n3.字符只能是 "),a("code",[t._v("3")]),t._v(" 位或者 "),a("code",[t._v("6")]),t._v(" 位\n根据横向模糊匹配，可以使用量词和分支结构")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(#[0-9a-fA-F]{6})|((#[0-9a-fA-F]{3})\\s)|(#[0-9a-fA-F]{3}$)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#ffbbad #f1234 #Fc01DF #FFF #ffE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => ["#ffbbad", "#Fc01DF", "#FFF ", "#ffE"]')]),t._v("\n")])])]),a("p",[a("strong",[t._v("勘误")])]),t._v(" "),a("p",[t._v("书中给出的正则表达式是 "),a("code",[t._v("/#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g")]),t._v("，这个是不够准确的，因为当字符串中含有不正确的十六进制时，就会匹配到意外的情况。")]),t._v(" "),a("p",[t._v("比如 "),a("code",[t._v("#f1234")]),t._v(" ，因为只有5位，所以这是个错误的十六进制颜色值，但是用书中的正则表达式会匹配出来 "),a("code",[t._v("#f12")]),t._v(", 这是不符合期望的。")]),t._v(" "),a("p",[t._v("为什么会匹配出来 "),a("code",[t._v("#f12")]),t._v("?"),a("br"),t._v("\n答：因为分支结构是惰性的，所以优先匹配出现6次的字符"),a("code",[t._v("[0-9a-fA-F]{6}")]),t._v("，"),a("code",[t._v("#f1234")]),t._v(" 中除了 "),a("code",[t._v("#")]),t._v(" 只有5个字符，所以不满足规则，继续匹配出现3次的字符"),a("code",[t._v("[0-9a-fA-F]{3}")]),t._v("，"),a("code",[t._v("#f1234")]),t._v(" 中具有满足此规则的字符串"),a("code",[t._v("#f12")]),t._v("，所以就匹配到了。")]),t._v(" "),a("p",[a("strong",[t._v("优化")])]),t._v(" "),a("p",[t._v("我的正则中使用了 "),a("code",[t._v("\\s")]),t._v(" 和 "),a("code",[t._v("$")]),t._v(" 这两个元字符：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("(#[0-9a-fA-F]{3})\\s")]),t._v("\n在后面加上 "),a("code",[t._v("\\s")]),t._v(" 的作用就是，确保3位的16进制颜色值后面必须是一个空格，这样就能避免把4位或者5位，截断成3位。")]),t._v(" "),a("li",[a("code",[t._v("(#[0-9a-fA-F]{3})$")]),t._v("\n在后面加上 "),a("code",[t._v("$")]),t._v(" 的作用就是，确保3位的16进制颜色值后面是字符串的结尾，避免遗漏最后一个匹配结果。")])]),t._v(" "),a("h2",{attrs:{id:"二、匹配时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、匹配时间"}},[t._v("#")]),t._v(" 二、匹配时间")]),t._v(" "),a("p",[t._v("以 24 小时制为例。")]),t._v(" "),a("p",[t._v("要求匹配：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("23:59\n02:07\n")])])]),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v("1.数字的范围是"),a("code",[t._v("0-9")]),t._v("\n2.第一位只能是"),a("code",[t._v("0")]),t._v("、"),a("code",[t._v("1")]),t._v("、"),a("code",[t._v("2")]),t._v("\n3.第二位依赖于第一位的选择：")]),t._v(" "),a("ul",[a("li",[t._v("[0][0-9]")]),t._v(" "),a("li",[t._v("[1][0-9]")]),t._v(" "),a("li",[t._v("[2][0-3]")])]),t._v(" "),a("p",[t._v("汇总为 [01][0-9]|[2][0-3]")]),t._v(" "),a("p",[t._v("4.第三位[0-5]\n5.第四位[0-9]")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^([01][0-9]|[2][0-3]):[0-5][0-9]$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23:59"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:07"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("p",[t._v('如果也要求匹配 "7:9", 也就是说时分前面的 "0" 可以忽略。')]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^([2][0-3]|1[0-9]|0?[0-9]):([1-5][0-9]|0?[0-9])$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"23:59"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"02:07"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7:9"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("h2",{attrs:{id:"三、匹配日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、匹配日期"}},[t._v("#")]),t._v(" 三、匹配日期")]),t._v(" "),a("p",[t._v("以 "),a("code",[t._v("yyyy-mm-dd")]),t._v(" 格式为例。")]),t._v(" "),a("p",[t._v("要求匹配:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("2017-06-10\n")])])]),a("p",[t._v("分析：\n1.年 [0-9]{4}\n但实际上 1970 之前的年份用的场景比较少，这里就只考虑 1970 以及之后的年份。")]),t._v(" "),a("p",[t._v("[1][9][7-9][0-9]|[2-9][0-9]{3}")]),t._v(" "),a("p",[t._v("2.月：01-12\n[0][1-9]|[1][0-2]")]),t._v(" "),a("p",[t._v("3.天：每个月的天数是不一样的")]),t._v(" "),a("p",[t._v("[0][1-9]|[12][0-9]|[3][01]")]),t._v(" "),a("p",[t._v("这个其实还是不够准确的，因为每个月天数不一样，后续会补充一个更完整的。")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2017-06-10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])]),a("h2",{attrs:{id:"四、匹配id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、匹配id"}},[t._v("#")]),t._v(" 四、匹配id")]),t._v(" "),a("p",[t._v("要求从")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("提取出 "),a("code",[t._v('id="container"')])]),t._v(" "),a("p",[t._v("分析：")]),t._v(" "),a("p",[t._v('1.整体可以看成是id="x"，其中只有 x 是变量，所以进一步分析 x'),a("br"),t._v("\n2.id 的值")]),t._v(" "),a("ul",[a("li",[t._v("id 的值不得包含空白字符（whitespace，包括空格和制表符等）")]),t._v(" "),a("li",[t._v("使用除 ASCII 字母、数字、_、- 和 . 以外的字符可能会造成兼容性问题，因为 HTML 4 中不允许使用它们。虽然这个限制在 HTML5 中被解除了，但为兼容性考虑 ID 应该以字母开头。")])]),t._v(" "),a("p",[t._v("通过上述描述可以发现，x 推荐的值是 "),a("code",[t._v("ASCII 字母")]),t._v("、"),a("code",[t._v("数字")]),t._v("、"),a("code",[t._v("_")]),t._v("、"),a("code",[t._v("-")]),t._v(" 和 "),a("code",[t._v(".")]),t._v("组合而成的")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/id="([-_a-zA-Z0-9\\.])*"/')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container"')]),t._v("\n")])])]),a("p",[t._v("但是一般id 的值可以用 "),a("code",[t._v(".")]),t._v(" 来匹配，因为可以默认id的值是正确的。")]),t._v(" "),a("p",[t._v("注意："),a("code",[t._v("*")]),t._v(" 是贪婪匹配，"),a("code",[t._v(".")]),t._v(" 可以匹配到 "),a("code",[t._v('"')]),t._v("，所以会把 class 也匹配进来，只要变成惰性模式就行了")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/id=".*?"/')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container"')]),t._v("\n")])])]),a("p",[t._v("另外一种方法，使用脱字符"),a("code",[t._v("^")]),t._v(",把 "),a("code",[t._v('"')]),t._v(" 排除")]),t._v(" "),a("p",[t._v("🍬")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/id="[^"]*"/')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<div id="container" class="main"></div>\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// => id="container"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);