(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{359:function(t,a,s){"use strict";s.r(a);var r=s(43),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"回朔法原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回朔法原理"}},[t._v("#")]),t._v(" 回朔法原理")]),t._v(" "),s("h2",{attrs:{id:"_4-1-没有回溯的匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-没有回溯的匹配"}},[t._v("#")]),t._v(" 4-1 没有回溯的匹配")]),t._v(" "),s("p",[t._v("通俗的讲：执行一次就能得到结果，不管成功还是失败。")]),t._v(" "),s("h2",{attrs:{id:"_4-2-常见的回溯形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-常见的回溯形式"}},[t._v("#")]),t._v(" 4-2 常见的回溯形式")]),t._v(" "),s("h4",{attrs:{id:"贪婪量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#贪婪量词"}},[t._v("#")]),t._v(" 贪婪量词")]),t._v(" "),s("p",[t._v("局部尽可能"),s("code",[t._v("多")]),t._v("的匹配，整体不满足时，逐渐尝试减少")]),t._v(" "),s("p",[t._v("当存在多个贪婪量词时，优先满足位置靠前的贪婪量词。")]),t._v(" "),s("h4",{attrs:{id:"惰性量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#惰性量词"}},[t._v("#")]),t._v(" 惰性量词")]),t._v(" "),s("p",[t._v("局部尽可能"),s("code",[t._v("少")]),t._v("的匹配，整体不满足时，逐渐尝试增加")]),t._v(" "),s("h4",{attrs:{id:"分支结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[t._v("#")]),t._v(" 分支结构")]),t._v(" "),s("p",[t._v("按照顺序尝试")]),t._v(" "),s("ul",[s("li",[t._v("局部和整体都满足，则结束。")]),t._v(" "),s("li",[t._v("局部满足，整体不满足，则尝试下一个")])])])}),[],!1,null,null,null);a.default=_.exports}}]);